[{"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/Users-Reducer.tsx":"1","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Users/Users.tsx":"2","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/ProfileContainer.tsx":"3","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/api/api.ts":"4","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Header/HeaderContainer.tsx":"5","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/auth-Reducer.tsx":"6","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Users/UsersContainer.tsx":"7","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/App.tsx":"8","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Login/Login.tsx":"9","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/Dialogs.tsx":"10","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/index.tsx":"11","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/sidbar-Reducer.ts":"12","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/common/Preloader/Preloader.tsx":"13","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/hoc/withAuthRedirect.tsx":"14","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/DialogsItem/DialogsItem.tsx":"15","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/Message/Message.tsx":"16","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/MyPosts/Post/Post.tsx":"17","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/MyPosts/MyPosts.tsx":"18","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/redux-store.ts":"19","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/Dialogs-Reducer.ts":"20","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/Profile-Reducer.tsx":"21","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/DialogsContainer.tsx":"22","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/Profile.tsx":"23","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"24","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx":"25","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/reportWebVitals.ts":"26","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Header/Header.tsx":"27","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/MyPosts/MyPostsContainer.tsx":"28"},{"size":4916,"mtime":1620049936002,"results":"29","hashOfConfig":"30"},{"size":2324,"mtime":1619528143572,"results":"31","hashOfConfig":"30"},{"size":2100,"mtime":1620132296563,"results":"32","hashOfConfig":"30"},{"size":977,"mtime":1620127536651,"results":"33","hashOfConfig":"30"},{"size":1112,"mtime":1620050813343,"results":"34","hashOfConfig":"30"},{"size":1436,"mtime":1620050533774,"results":"35","hashOfConfig":"30"},{"size":4074,"mtime":1620047911350,"results":"36","hashOfConfig":"30"},{"size":1793,"mtime":1620047911357,"results":"37","hashOfConfig":"30"},{"size":994,"mtime":1620146273153,"results":"38","hashOfConfig":"30"},{"size":1724,"mtime":1620054488544,"results":"39","hashOfConfig":"30"},{"size":795,"mtime":1618399388762,"results":"40","hashOfConfig":"30"},{"size":241,"mtime":1620049935956,"results":"41","hashOfConfig":"30"},{"size":195,"mtime":1619011476323,"results":"42","hashOfConfig":"30"},{"size":782,"mtime":1620053137428,"results":"43","hashOfConfig":"30"},{"size":398,"mtime":1618647506974,"results":"44","hashOfConfig":"30"},{"size":274,"mtime":1618647550645,"results":"45","hashOfConfig":"30"},{"size":450,"mtime":1620049936028,"results":"46","hashOfConfig":"30"},{"size":1416,"mtime":1620049935929,"results":"47","hashOfConfig":"30"},{"size":1574,"mtime":1620128315294,"results":"48","hashOfConfig":"30"},{"size":1717,"mtime":1620049935966,"results":"49","hashOfConfig":"30"},{"size":2786,"mtime":1620132030466,"results":"50","hashOfConfig":"30"},{"size":1622,"mtime":1620118148928,"results":"51","hashOfConfig":"30"},{"size":770,"mtime":1620128816950,"results":"52","hashOfConfig":"30"},{"size":908,"mtime":1620129715062,"results":"53","hashOfConfig":"30"},{"size":1393,"mtime":1620133575315,"results":"54","hashOfConfig":"30"},{"size":425,"mtime":1612292855985,"results":"55","hashOfConfig":"30"},{"size":509,"mtime":1619439992474,"results":"56","hashOfConfig":"30"},{"size":1606,"mtime":1620049935990,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6vldmr",{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"67"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/Users-Reducer.tsx",["126"],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Users/Users.tsx",["127","128","129"],"import React from 'react';\nimport s from './User.module.css'\nimport UserPhoto from '../../assets/img/user.png'\nimport {NavLink} from 'react-router-dom';\nimport axios from 'axios';\nimport {usersAPI} from '../../api/api';\n\nlet Users = (props: any) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\n\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    return (\n        <>\n            <div>\n                {pages.map(p => {\n                    // @ts-ignore\n                    return <span className={props.currentPage === p && s.selectedPage}\n                                 onClick={() => {\n                                     props.onPageChanged(p)\n                                 }}>{p}</span>\n                })}\n\n            </div>\n            <div className={s.users}>\n                {\n                    props.users.map((u: any) => <div key={u.id}>\n                    <span>\n                        <div>\n                            <NavLink to={'profile/' + u.id}>\n                                <img src={u.photos.small != null ? u.photos.small : UserPhoto}/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            {u.followed\n                                ? <button disabled={props.followingInProgress.some((id:any)=>id===u.id)} onClick={() => {\n                                    props.unfollow(u.id)}}>\n                                    Unfollow</button>\n                                : <button disabled={props.followingInProgress.some((id:any)=>id===u.id)} onClick={() => {\n                                    props.follow(u.id)}}>\n                                    Follow</button>}\n                        </div>\n                    </span>\n                        <span>\n                        <span>\n                            <div>{u.name}</div>\n                            <div>{u.status}</div>\n                        </span>\n                        <span>\n                            <div>{'u.location.country'}</div>\n                            <div>{'u.location.city'}</div>\n                        </span>\n                    </span>\n                    </div>)\n                }\n            </div>\n        </>\n    )\n}\n\n\nexport default Users;",["130","131"],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/ProfileContainer.tsx",["132"],"import React from 'react';\nimport {ReduxStateType, ReduxStoreType} from '../../redux/redux-store';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\nimport {getStatus, getUserProfile, updateStatus} from '../../redux/Profile-Reducer';\nimport {Redirect, withRouter} from 'react-router-dom';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport {compose} from 'redux';\n\nexport type ProfilePropsType = {\n    store?: ReduxStoreType\n    //  dataProfile: Array<PostType>\n    //  //addPostCallback: (postText: string) => void\n    // // changeNewTextCallback:any\n    //  message: string\n    //  dispatch: (action: ActionsType) => void\n}\ntype ContactProfileType = {\n    github: string\n    vk: string\n    facebook: string\n    instagram: string\n    twitter: string\n    website: string\n    youtube: string\n    mainLink: string\n}\ntype PhotosProfileType = {\n    small: string\n    large: string\n}\ntype ProfileContainerType = {\n    userId: number\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    contacts: ContactProfileType\n    photos: PhotosProfileType\n}\ntype MapStateToPropsType = {\n    profile: ProfileContainerType\n    status:string\n}\n\nclass ProfileContainer extends React.Component<any, any> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = 2\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n            />\n        )\n\n    }\n}\n\nconst mapStateToProps = (state: ReduxStateType): MapStateToPropsType => {\n    return {\n        profile: state.profilePage.profile,\n        status:state.profilePage.status,\n    }\n}\n\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile,getStatus,updateStatus}),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer)\n\n\n",["133","134"],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/api/api.ts",[],["135","136"],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Header/HeaderContainer.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/auth-Reducer.tsx",[],["137","138"],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Users/UsersContainer.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/App.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Login/Login.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/Dialogs.tsx",["139"],"import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from './DialogsItem/DialogsItem';\nimport Message from './Message/Message';\nimport {DiologType, MessageType} from '../../redux/Dialogs-Reducer';\nimport {Redirect} from 'react-router-dom';\n\ntype DiologPropsType={\n    dialogs: Array<DiologType>\n    messages: Array<MessageType>\n    messageForNewMessage: string\n    addMessage:()=> void\n    newTextChangeHandler:(text:string)=> void\n    // isAuth:boolean\n}\n\nconst Dialogs = (props:DiologPropsType) => {\n    let addMessage = () => {\n        // let text = newMessageElement.current?.value\n        // alert(text)\n        props.addMessage()\n    }\n    const newTextChangeHandlerMessage = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        //props.changeNewTextCallback(e.currentTarget.value)\n        props.newTextChangeHandler(e.currentTarget.value)\n    }\n\n\n    let dialogsElements =props.dialogs\n        .map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\n\n\n    let messageElements = props.messages\n        .map(m => <Message message={m.message} key={m.message}/>)\n\n    // if(!props.isAuth) return <Redirect to={\"/login\"}/>\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItem}>\n                {dialogsElements}\n\n            </div>\n            <div className={s.messages}>\n                {messageElements}\n                <div>\n                    <textarea onChange={newTextChangeHandlerMessage}\n                              value={props.messageForNewMessage}> </textarea>\n                    <button onClick={addMessage}>add Message</button>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nexport default Dialogs;","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/index.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/sidbar-Reducer.ts",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/common/Preloader/Preloader.tsx",["140"],"import Preload from '../../../assets/img/200.gif'\n\nlet Preloader = () => {\n    return (\n        <div style={{}}>\n            <img src={Preload}/>\n\n        </div>\n    )\n}\n\nexport default Preloader","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/hoc/withAuthRedirect.tsx",["141"],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/DialogsItem/DialogsItem.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/Message/Message.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/MyPosts/Post/Post.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/MyPosts/MyPosts.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/redux-store.ts",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/Dialogs-Reducer.ts",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/redux/Profile-Reducer.tsx",["142"],"import {profileAPI, usersAPI} from '../api/api';\nimport {PostType} from '../components/Profile/MyPosts/MyPosts';\nimport {ActionsType} from './redux-store';\n\nconst ADD_POST = 'ADD-POST'\nconst CHANGE_NEW_TEXT = 'CHANGE_NEW_TEXT'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\n\nexport const AddPostAC = () => {\n    return {\n        type: ADD_POST,\n    } as const\n}\nexport const ChangeNewTextAC = (newText: string) => {\n    return {\n        type: CHANGE_NEW_TEXT,\n        newText: newText,\n    } as const\n}\nexport const SetUserProfile = (profile: any) => {\n    return {\n        type: SET_USER_PROFILE,\n        profile\n    } as const\n}\nexport const SetStatus = (status: string) => {\n    return {\n        type: SET_STATUS,\n        status\n    } as const\n}\nexport const getUserProfile = (userId: number) => (dispatch: any) => {\n    profileAPI.getProfile(userId).then(response => {\n        dispatch(SetUserProfile(response.data))\n    })\n}\nexport const getStatus = (userId: number) => (dispatch: any) => {\n    profileAPI.getStatus(userId).then(response => {\n        dispatch(SetStatus(response.data))\n    })\n}\nexport const updateStatus = (status: string) => (dispatch: any) => {\n    profileAPI.updateStatus(status)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(SetStatus(status))\n            }\n        })\n}\n\n\ntype ProfilePageType = {\n    posts: Array<PostType>\n    messageForNewPost: string\n    profile: null\n    status: string\n}\nconst initialState: ProfilePageType = {\n    messageForNewPost: 'iiiiiit',\n    posts: [\n        {id: 1, message: 'Hi,hom are you', likesCount: 12},\n        {id: 2, message: 'Hello my freends', likesCount: 42},\n        {id: 3, message: 'Hello my', likesCount: 2}\n    ],\n    profile: null,\n    status: '',\n\n}\n\nconst profileReducer = (state = initialState, action: ActionsType) => {\n    switch (action.type) {\n        case ADD_POST: {\n            const newPost: PostType = {\n                id: new Date().getTime(),\n                message: state.messageForNewPost,\n                likesCount: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                messageForNewPost: ''\n            }\n        }\n        case CHANGE_NEW_TEXT: {\n            return {\n                ...state,\n                messageForNewPost: action.newText\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport default profileReducer;","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Dialogs/DialogsContainer.tsx",["143","144"],"import React from 'react';\nimport {AddMessageAC, ChangeNewTextDialogsAC} from '../../redux/Dialogs-Reducer';\nimport Dialogs from './Dialogs';\nimport {ReduxStateType} from '../../redux/redux-store';\nimport {connect} from 'react-redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\ntype MessageType = {\n    message: string\n}\ntype DiologType = {\n    id: number\n    name: string\n}\ntype DialogsContainerType = {\n    // store: ReduxStoreType\n    dialogs: Array<DiologType>\n    message: Array<MessageType>\n    messageForNewMessage: string\n    addMessage: () => void\n    newTextChangeHandler: (text: string) => void\n}\ntype MapStateToPropsType = {\n    dialogs: Array<DiologType>\n    messages: Array<MessageType>\n    messageForNewMessage: string\n}\ntype MapDispatchToPropsType = {\n    addMessage: () => void\n    newTextChangeHandler: (text: string) => void\n}\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\nlet mapStateToProps = (state: ReduxStateType): MapStateToPropsType => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messageForNewMessage: state.dialogsPage.messageForNewMessage,\n        messages: state.dialogsPage.message,\n    }\n\n}\nlet mapDispatchToProps = (dispatch:any):MapDispatchToPropsType => {\n    return {\n        addMessage: () => {\n            dispatch(AddMessageAC())\n        },\n        newTextChangeHandler: (text: string) => {\n            dispatch(ChangeNewTextDialogsAC(text))\n        },\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n\n","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/Profile.tsx",["145"],"import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport {ReduxStoreType} from '../../redux/redux-store';\nimport {updateStatus} from '../../redux/Profile-Reducer';\n\nexport type ProfilePropsType = {\n    store?:ReduxStoreType\n   //  dataProfile: Array<PostType>\n   //  //addPostCallback: (postText: string) => void\n   // // changeNewTextCallback:any\n   //  message: string\n   //  dispatch: (action: ActionsType) => void\n}\nconst Profile = (props: any) => {\n\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer\n            />\n\n        </div>\n    )\n}\nexport default Profile;","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["146"],"import React from 'react';\nimport s from './ProfileInfo.module.css'\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\n\nconst ProfileInfo = (props:any) => {\n    if(!props.profile){\n        return <Preloader/>\n    }\n    return (\n        <div className={s.profileinfo}>\n            {/*<img*/}\n            {/*    src=\"https://s.zagranitsa.com/images/articles/3580/870x486/6ee37702048d1e30ebd2e338b85d7f61.jpg?1463482531\"*/}\n            {/*    alt=\"\"/>*/}\n            <div className={s.discriptionBlock}>\n                Full name: {props.profile.fullName}\n                <img src={props.profile.photos.large}/>\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n                Search work : {props.profile.lookingForAJobDescription}\n\n\n            </div>\n\n        </div>\n    )\n}\nexport default ProfileInfo;","/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx",["147"],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/reportWebVitals.ts",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Header/Header.tsx",[],"/Users/monikazadorozhina/Library/Containers/com.apple.iWork.Pages/Data/Documents/it-incubator/Samyrai/way-of-samurai/src/components/Profile/MyPosts/MyPostsContainer.tsx",["148","149"],{"ruleId":"150","severity":1,"message":"151","line":140,"column":72,"nodeType":"152","messageId":"153","endLine":140,"endColumn":74},{"ruleId":"154","severity":1,"message":"155","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":13},{"ruleId":"154","severity":1,"message":"158","line":6,"column":9,"nodeType":"156","messageId":"157","endLine":6,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":33,"column":33,"nodeType":"161","endLine":33,"endColumn":97},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"154","severity":1,"message":"166","line":6,"column":9,"nodeType":"156","messageId":"157","endLine":6,"endColumn":17},{"ruleId":"162","replacedBy":"167"},{"ruleId":"164","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"164","replacedBy":"170"},{"ruleId":"162","replacedBy":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"154","severity":1,"message":"166","line":6,"column":9,"nodeType":"156","messageId":"157","endLine":6,"endColumn":17},{"ruleId":"159","severity":1,"message":"160","line":6,"column":13,"nodeType":"161","endLine":6,"endColumn":33},{"ruleId":"154","severity":1,"message":"173","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"158","line":1,"column":21,"nodeType":"156","messageId":"157","endLine":1,"endColumn":29},{"ruleId":"154","severity":1,"message":"174","line":16,"column":6,"nodeType":"156","messageId":"157","endLine":16,"endColumn":26},{"ruleId":"154","severity":1,"message":"175","line":33,"column":6,"nodeType":"156","messageId":"157","endLine":33,"endColumn":18},{"ruleId":"154","severity":1,"message":"176","line":5,"column":9,"nodeType":"156","messageId":"157","endLine":5,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":17,"column":17,"nodeType":"161","endLine":17,"endColumn":56},{"ruleId":"154","severity":1,"message":"177","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":9},{"ruleId":"154","severity":1,"message":"178","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"179","line":7,"column":6,"nodeType":"156","messageId":"157","endLine":7,"endColumn":26},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'usersAPI' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"'Redirect' is defined but never used.",["180"],["181"],["180"],["181"],["180"],["181"],"'Component' is defined but never used.","'DialogsContainerType' is defined but never used.","'OwnPropsType' is defined but never used.","'updateStatus' is defined but never used.","'s' is defined but never used.","'React' is defined but never used.","'MyPostsContainerType' is defined but never used.","no-global-assign","no-unsafe-negation"]